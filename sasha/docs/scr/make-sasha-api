#! /usr/bin/env python

import os
import sasha
from abjad.tools.documentationtools import APICrawler


sasha_root = sasha.__path__[0]


def _collect_api_modules():
    docs_path = os.path.join(sasha_root, 'docs', 'source', 'api')
    code_tools_path = os.path.join(sasha_root, 'tools')
    docs_tools_path = os.path.join(docs_path, 'tools')
    if not os.path.exists(docs_tools_path):
        os.mkdir(docs_tools_path)
    tools_module_crawler = APICrawler(
        code_tools_path,
        docs_tools_path,
        'sasha',
        prefix='sasha.tools.'
        )
    tools_modules = tools_module_crawler()
    return {
        'tools': tools_modules,
        }


def _create_index(modules):
    r = []
    r += ['sasha_configuration API Documentation']
    r += ['=======================']
    r += ['.. toctree::']
    r += ['   :maxdepth: 1']
    r += ['']
    r += ['Tools']
    r += ['-----']
    current_package = None
    for module in modules['tools']:
        path = module.module_name.split('.')[2:-1]
        package = path[0]
        if package != current_package:
            r += ['']
            r += ['%s' % package]
            r += ['%s' % ('~' * len(package))]
            r += ['.. toctree::']
            r += ['   :maxdepth: 1']
            r += ['']
            current_package = package
        r += ['   api/tools/%s' % '/'.join(path)]
    r += ['']
    index_path = os.path.join(
        sasha_root,
        'docs',
        'source',
        'index.rst',
        )
    f = open(index_path, 'w')
    f.write('\n'.join(r))
    f.close()


if __name__ == '__main__':
    modules = _collect_api_modules()
    _create_index(modules)